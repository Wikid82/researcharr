name: Deploy docs previews to GitHub Pages

on:
  push:
    # run on all branches except main
    branches-ignore: [ main ]

jobs:
  preview:
    runs-on: debain-latest
    permissions:
      contents: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Prepare preview site directory and cleanup stale previews
      env:
        REPO: ${{ github.repository }}
        TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: ${{ github.ref_name }}
      run: |
        set -euo pipefail
        rm -rf site
        # try to clone existing gh-pages branch to preserve main site and other previews
        if git ls-remote --exit-code https://x-access-token:${TOKEN}@github.com/${REPO} gh-pages; then
          git clone --branch gh-pages https://x-access-token:${TOKEN}@github.com/${REPO} site
        else
          mkdir site
        fi
        # Cleanup: remove preview folders for branches that no longer exist
        echo "Checking for stale previews to remove..."
        REMOTE_BRANCHES=$(git ls-remote --heads https://x-access-token:${TOKEN}@github.com/${REPO} | awk '{print $2}' | sed 's|refs/heads/||')
        for D in site/previews/*; do
          [ -d "$D" ] || continue
          NAME=$(basename "$D")
          if ! echo "$REMOTE_BRANCHES" | grep -xq "$NAME"; then
            echo "Removing preview for deleted branch: $NAME"
            rm -rf "$D"
          fi
        done
        # Also remove previews older than 90 days to limit gh-pages size
        if [ -d site/previews ]; then
          find site/previews -mindepth 1 -maxdepth 2 -type d -mtime +90 -print0 | xargs -0 -r rm -rf || true
        fi
        # remove any existing preview for this branch and copy new docs
        rm -rf "site/previews/${BRANCH}"
        mkdir -p "site/previews/${BRANCH}"
        cp -a docs/. "site/previews/${BRANCH}/" || true

    - name: Deploy previews to gh-pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./site
