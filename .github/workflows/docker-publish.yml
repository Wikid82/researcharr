name: Docker Publish

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.8, 3.9, 3.10, 3.11 ]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: pip install -r requirements.txt
    - name: Run tests
      run: pytest researcharr/tests/ -v

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install linters
      run: pip install flake8 black isort
    - name: Run flake8
      run: flake8 researcharr/
    - name: Run black check
      run: black --check researcharr/
    - name: Run isort check
      run: isort --check researcharr/

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build Docker image (no push)
      run: docker build -t researcharr:scan .
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@v0.33.1
      with:
        image-ref: researcharr:scan
        format: table
        exit-code: 1
        ignore-unfixed: true

  build-and-push:
    runs-on: ubuntu-latest
    needs: [ test, lint, security-scan ]
    steps:
    - uses: actions/checkout@v3
    - name: Set Docker tag
      id: vars
      run: |
        if [[ "${GITHUB_REF##*/}" == "main" ]]; then
          echo "tag=latest" >> $GITHUB_OUTPUT
        else
          echo "tag=development" >> $GITHUB_OUTPUT
        fi
    - name: Build and push Docker image
      run: |
        docker build -t ghcr.io/wikid82/researcharr:${{ steps.vars.outputs.tag }} .
        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        docker push ghcr.io/wikid82/researcharr:${{ steps.vars.outputs.tag }}
