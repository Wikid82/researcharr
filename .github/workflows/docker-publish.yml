name: CI

on:
  push: {}
  pull_request: {}

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.13 ]
  steps:
  - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install black isort flake8 mypy pytest pytest-cov
    - name: Lint with flake8
      run: |
        flake8 . --count --show-source --statistics
    - name: Check formatting with black
      run: |
        black --check .
    - name: Check import order with isort
      run: |
        isort --profile=black --check-only .
    - name: Type check with mypy
      run: |
        mypy .
    - name: Run tests with pytest
      run: |
        pytest tests/ --maxfail=3 --disable-warnings -v --cov=researcharr
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
      continue-on-error: true

  docker:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    concurrency:
      group: docker-publish-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
    - uses: actions/checkout@v4
    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract branch name
      id: extract_branch
      run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
    - name: Set lowercase repository name
      id: repo_name
      run: echo "REPO_NAME=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
    - name: Build and push Docker image (all branches)
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ env.REPO_NAME }}:${{ steps.extract_branch.outputs.branch }}
          ghcr.io/${{ env.REPO_NAME }}:branch-${{ steps.extract_branch.outputs.branch }}
        cache-from: type=gha,scope=researcharr-build-cache
        cache-to: type=gha,mode=max,scope=researcharr-build-cache
        build-args: |
          PYTHON_VERSION=${{ matrix.python-version }}
    - name: Additional tags for main/development
      if: startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/heads/development')
      run: |
        REPO=ghcr.io/${{ env.REPO_NAME }}
        BRANCH=${{ steps.extract_branch.outputs.branch }}
        if [ "$BRANCH" = "main" ]; then docker tag $REPO:main $REPO:latest && docker push $REPO:latest; fi
        if [ "$BRANCH" = "development" ]; then docker tag $REPO:development $REPO:development && docker push $REPO:development; fi
