name: Distroless CI (build, test, trivy, publish)

on:
  push:
    branches: [ main, development ]
    tags: [ 'v*', '*' ]
  pull_request:
    branches: [ main, development ]

permissions:
  contents: read
  packages: write

jobs:
  distroless-ci:
    name: Build distroless image, run tests, Trivy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Set up QEMU and buildx
      uses: docker/setup-buildx-action@v2

    - name: Build builder stage image
      run: |
        docker build --target builder -f Dockerfile.distroless -t local/researcharr:builder .

    - name: Run mypy + pytest inside builder image
      env:
        PYTHONPATH: ${{ github.workspace }}
      run: |
        docker run --rm --entrypoint "" -v "${{ github.workspace }}":/src -w /src local/researcharr:builder sh -lc "python -m pip install --upgrade pip && pip install mypy pytest && mypy . && pytest tests/ --maxfail=1 -q"

    - name: Build final distroless image (loaded)
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile.distroless
        push: false
        load: true
        tags: local/researcharr:distroless

    - name: Run Trivy scan on distroless image
      run: |
        docker run --rm -v "${{ github.workspace }}":/workspace -w /workspace aquasec/trivy:latest image --format json -o build/artifacts/trivy-report-distroless.json local/researcharr:distroless || true

    - name: Upload Trivy JSON artifact
      uses: actions/upload-artifact@v4
      with:
        name: trivy-report-distroless
        path: build/artifacts/trivy-report-distroless.json

    - name: Prepare minimal config for smoke-test
      run: |
        mkdir -p build/smoke-config
        cp config.example.yml build/smoke-config/config.yml || true

    - name: Run distroless smoke-test (health endpoint)
      run: |
        set -euo pipefail
        docker run --rm -d --name smoke_test_instance -v "${{ github.workspace }}/build/smoke-config":/config -e CONFIG_PATH=/config/config.yml -p 2929:2929 local/researcharr:distroless || true
        # Wait up to 30s for the health endpoint
        for i in $(seq 1 30); do
          if curl -sS -f http://127.0.0.1:2929/health >/dev/null 2>&1; then
            echo "smoke-test: health ok"
            break
          fi
          sleep 1
        done
        # Fail if health is not up
        if ! curl -sS -f http://127.0.0.1:2929/health >/dev/null 2>&1; then
          docker logs smoke_test_instance || true
          docker stop smoke_test_instance || true
          exit 1
        fi
        docker stop smoke_test_instance || true

    - name: Compute VERSION
      id: version
      run: |
        if [[ "${GITHUB_REF}" =~ refs/tags/(.*) ]]; then
          echo "VERSION=${BASH_REMATCH[1]}" >> $GITHUB_ENV
        else
          echo "VERSION=0.0.0-alpha.${GITHUB_RUN_ID}" >> $GITHUB_ENV
        fi

    - name: Log in to GHCR
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development' || startsWith(github.ref, 'refs/tags/')
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Tag and push distroless image to GHCR (main/development/tags only)
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development' || startsWith(github.ref, 'refs/tags/')
      run: |
        docker tag local/researcharr:distroless ghcr.io/${{ github.repository }}:${{ env.VERSION }}-distroless
        docker tag local/researcharr:distroless ghcr.io/${{ github.repository }}:distroless
        docker push ghcr.io/${{ github.repository }}:${{ env.VERSION }}-distroless
        docker push ghcr.io/${{ github.repository }}:distroless

    - name: Publish dev tag (development branch only)
      if: github.ref == 'refs/heads/development'
      run: |
        docker tag local/researcharr:distroless ghcr.io/${{ github.repository }}:dev-${{ github.run_id }}
        docker push ghcr.io/${{ github.repository }}:dev-${{ github.run_id }}
